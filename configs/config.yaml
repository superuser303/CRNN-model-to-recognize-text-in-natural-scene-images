# CRNN Configuration File

# Model Architecture
model:
  name: "CRNN"
  input_height: 32
  input_width: 128
  input_channels: 3
  
  # CNN Configuration
  cnn:
    feature_extractor: "resnet"  # options: "resnet", "vgg", "custom"
    pretrained: true
    freeze_backbone: false
    output_channels: 512
  
  # RNN Configuration
  rnn:
    type: "LSTM"  # options: "LSTM", "GRU", "BiLSTM"
    hidden_size: 256
    num_layers: 2
    dropout: 0.1
    bidirectional: true
  
  # Output Configuration
  num_classes: 37  # 26 letters + 10 digits + blank
  use_attention: false

# Training Configuration
training:
  epochs: 100
  batch_size: 32
  learning_rate: 0.001
  weight_decay: 1e-5
  
  # Optimizer
  optimizer: "Adam"  # options: "Adam", "SGD", "AdamW"
  scheduler: "ReduceLROnPlateau"
  patience: 10
  factor: 0.5
  
  # Loss function
  loss_function: "CTC"
  
  # Early stopping
  early_stopping:
    enabled: true
    patience: 15
    min_delta: 0.001
  
  # Gradient clipping
  gradient_clipping:
    enabled: true
    max_norm: 5.0

# Data Configuration
data:
  # Dataset paths
  train_data_path: "data/train"
  val_data_path: "data/val"
  test_data_path: "data/test"
  
  # Data loading
  num_workers: 4
  pin_memory: true
  shuffle: true
  
  # Image preprocessing
  image_preprocessing:
    resize: [32, 128]  # [height, width]
    normalize:
      mean: [0.485, 0.456, 0.406]
      std: [0.229, 0.224, 0.225]
    
  # Data augmentation
  augmentation:
    enabled: true
    probability: 0.5
    transforms:
      - rotation: 5  # degrees
      - perspective: 0.1
      - brightness: 0.2
      - contrast: 0.2
      - blur: 3
      - noise: 0.01

# Character set
charset:
  characters: "0123456789abcdefghijklmnopqrstuvwxyz"
  case_sensitive: false
  blank_token: 0

# Validation
validation:
  frequency: 1  # validate every N epochs
  metrics: ["accuracy", "edit_distance", "exact_match"]
  save_best_only: true

# Logging and Monitoring
logging:
  log_level: "INFO"
  log_dir: "logs"
  tensorboard: true
  wandb:
    enabled: false
    project_name: "crnn-text-recognition"

# Model Saving
checkpoint:
  save_dir: "models"
  save_frequency: 5  # save every N epochs
  keep_best: true
  keep_last: 3

# Inference
inference:
  batch_size: 16
  confidence_threshold: 0.5
  max_text_length: 25
  beam_search:
    enabled: false
    beam_width: 5

# Hardware
device:
  use_cuda: true
  cuda_device: 0  # GPU device ID
  mixed_precision: true  # Use automatic mixed precision

# Paths
paths:
  root_dir: "."
  data_dir: "data"
  models_dir: "models"
  logs_dir: "logs"
  results_dir: "results"

# Web API Configuration
api:
  host: "0.0.0.0"
  port: 5000
  debug: false
  max_file_size: 16777216  # 16MB
  allowed_extensions: ["jpg", "jpeg", "png", "bmp", "tiff"]

# Deployment
deployment:
  model_path: "models/best_model.pth"
  batch_inference: true
  cache_predictions: false
